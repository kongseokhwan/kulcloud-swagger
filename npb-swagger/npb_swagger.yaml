swagger: "2.0"
info:
  title: "PRISM NBAPI"
  version: "1.0.0"
  description: "This is a PRISM NBAPI API Client module."  
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

host: "203.255.254.105:8181"
basePath: "/1.0"
tags:
- name: "port" #1
  description: "NPB Port Manager"
- name: "ratelimit" #2
  description: "NPB Rate Limit Manager"
- name: "filter" #3
  description: "NPB Filter Manager"
- name: "policy" #4
  description: "NPB Policy Manager"
- name: "satistics" #5
  description: "NPB Statistics Manager"
- name: "auth" #6
  description: "NPB Authentication Manager"
- name: "device" #7
  description: "NPB Device Manager"
- name: "notification" #8
  description: "NPB Notification Manager"
- name: "backup" #9
  description: "NPB Backup Manager"
- name: "servicechain" #10
  description: "NPB ServiceChain Manager"
schemes:
- "http"
paths:
  #### Port Group ####
  /tapping/port/group:
    post: #1.1
      tags:
      - "port"
      summary: "Create NPB Port Group"
      description: "Create NPB Port Group"
      operationId: "createPortgroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "PortgroupObject"
        in: "body"
        schema:
          $ref: "#/definitions/PortgroupObject"
        description: "Port Group Object"
        required: true      
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SuccessMessage"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/port/{group_name}:
    delete: #1.2
      tags:
      - "port"
      summary: "Delete NPB Port Group"
      description: "지정된 이름의 포트 그룹 삭제."
      operationId: "deletePortgroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_name"
        in: "path"
        description: "삭제할 포트 그그룹 이름"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/PortGroupName"
        400:
          description: "Router not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []

  /tapping/port/all:
    get: #1.3
      tags:
      - "port"
      summary: "Get NPB All Port Group"
      description: "Get NPB All Port Group"
      operationId: "getAllPortGroup"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/GetGroupsObject"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/port/{group_name}:
    get: #1.4
      tags:
      - "port"
      summary: "Get NPB Port Group"
      description: "Get NPB Port Group"
      operationId: "getPortGroup"
      produces:
      - "application/json"
      parameters:
      - name: "group_name"
        in: "path"
        description: "삭제할 포트 그룸 이름"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/GetGroupObject"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/port/group/{group_name}:
    put: #1.5
      tags:
      - "port"
      summary: "Update NPB Port Group"
      description: "Update NPB Port Group"
      operationId: "updatePortGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "group_name"
        in: "path"
        required: true
        type: "string"
        description: "group name"
      - name: "PortgroupObject"
        in: "body"
        schema:
          $ref: "#/definitions/PortgroupObject"
        description: "Port Group Object"
        required: true      
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SuccessMessage"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  #### Rate Limiter ####
  /tapping/rate/limit:
    post: #1.6
      tags:
      - "ratelimit"
      summary: "Create NPB Rate Limit"
      description: "Create NPB Rate Limit"
      operationId: "createRateLimit"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "RateLimitObject"
        in: "body"
        schema:
          $ref: "#/definitions/RateLimitObject"
        description: "Port Group Object"
        required: true      
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SuccessMessage"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/rate/limit/{limit_name}:
    delete: #1.7
      tags:
      - "ratelimit"
      summary: "Delete NPB Rate Limit"
      description: "Delete NPB Rate Limit"
      operationId: "deleteRateLimit"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit_name"
        in: "path"
        description: "Rate Limit Name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/RateLimitName"
        400:
          description: "Router not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []

  /tapping/rate/limit/all:
    get: #1.3
      tags:
      - "ratelimit"
      summary: "Get NPB Rate Limit All"
      description: "Get NPB Rate Limit All"
      operationId: "getAllRateLimit"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/RateLimitRespList"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/rate/limit/{limit_name}:
    get: #1.4
      tags:
      - "ratelimit"
      summary: "Get NPB Rate Limit"
      description: "Get NPB Rate Limit"
      operationId: "getRateLimit"
      produces:
      - "application/json"
      parameters:
      - name: "group_name"
        in: "path"
        description: "Rate Limit Name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/RateLimitResp"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/rate/limit/{limit_name}:
    put: #1.5
      tags:
      - "ratelimit"
      summary: "Update NPB Rate Limit"
      description: "Update NPB Rate Limit"
      operationId: "updateRateLimit"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "limit_name"
        in: "path"
        required: true
        type: "string"
        description: "limit name"
      - name: "RateLimitObject"
        in: "body"
        schema:
          $ref: "#/definitions/RateLimitObject"
        description: "Rate Limit Object"
        required: true      
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SuccessMessage"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []

  #### Filter ####
  /tapping/filter/service:
    post: #1.6
      tags:
      - "filter"
      summary: "Create NPB Filter"
      description: "Create NPB Filter"
      operationId: "createFilter"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "FilterObject"
        in: "body"
        schema:
          $ref: "#/definitions/FilterObject"
        description: "Filter Object"
        required: true      
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SuccessMessage"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/filter/service/{filter_name}:
    delete: #1.7
      tags:
      - "filter"
      summary: "Delete NPB Filter"
      description: "Delete NPB Filter"
      operationId: "deleteFilter"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "filter_name"
        in: "path"
        description: "Filter Name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/FilterName"
        400:
          description: "Router not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []

  /tapping/filter/service/all:
    get: #1.3
      tags:
      - "filter"
      summary: "Get NPB Filter All"
      description: "Get NPB Filter All"
      operationId: "getAllFilter"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/FilterRespList"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/filter/service/{filter_name}:
    get: #1.4
      tags:
      - "filter"
      summary: "Get NPB Filter"
      description: "Get NPB Filter"
      operationId: "getFilter"
      produces:
      - "application/json"
      parameters:
      - name: "filter_name"
        in: "path"
        description: "Filter Name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/FilterResp"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/filter/service/{filter_name}:
    put: #1.5
      tags:
      - "filter"
      summary: "Update NPB Filter"
      description: "Update NPB Filter"
      operationId: "updateFilter"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "filter_name"
        in: "path"
        required: true
        type: "string"
        description: "filter name"
      - name: "FilterObject"
        in: "body"
        schema:
          $ref: "#/definitions/FilterObject"
        description: "Filter Object"
        required: true      
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SuccessMessage"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []

#### Policy ####
  /tapping/policy:
    post: #1.6
      tags:
      - "policy"
      summary: "Create NPB Policy"
      description: "Create NPB Policy"
      operationId: "createPolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "PolicyObject"
        in: "body"
        schema:
          $ref: "#/definitions/PolicyObject"
        description: "Policy Object"
        required: true      
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SuccessMessage"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/policy/{policy_name}:
    delete: #1.7
      tags:
      - "policy"
      summary: "Delete NPB Policy"
      description: "Delete NPB Policy"
      operationId: "deletePolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_name"
        in: "path"
        description: "Policy Name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/PolicyName"
        400:
          description: "Router not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []

  /tapping/policy/all:
    get: #1.3
      tags:
      - "policy"
      summary: "Get NPB Policy All"
      description: "Get NPB Policy All"
      operationId: "getAllPolicy"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/PolicyRespList"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/policy/{policy_name}:
    get: #1.4
      tags:
      - "policy"
      summary: "Get NPB Policy"
      description: "Get NPB Policy"
      operationId: "getPolicy"
      produces:
      - "application/json"
      parameters:
      - name: "policy_name"
        in: "path"
        description: "Policy Name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/PolicyResp"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/policy/{policy_name}:
    put: #1.5
      tags:
      - "policy"
      summary: "Update NPB Policy"
      description: "Update NPB Policy"
      operationId: "updatePolicy"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "policy_name"
        in: "path"
        required: true
        type: "string"
        description: "policy name"
      - name: "PolicyObject"
        in: "body"
        schema:
          $ref: "#/definitions/PolicyObject"
        description: "Policy Object"
        required: true      
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SuccessMessage"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []

#### Statistics ####
  /tapping/{dpid}/stat/realtime/policy/all:
    get: #1.3
      tags:
      - "statistics"
      summary: "Get NPB Statistics of All Policy"
      description: "Get NPB Statistics of All Policy"
      operationId: "getAllPolicyStatistics"
      produces:
      - "application/json"
      parameters:
      - name: "dpid"
        in: "path"
        required: true
        type: "string"
        description: "dpid name"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ALLPolicyStatisticsRespList"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/{dpid}/stat/realtime/policy/{policy_name}:
    get: #1.4
      tags:
      - "statistics"
      summary: "Get NPB Statistics of Policy"
      description: "Get NPB Statistics of Policy"
      operationId: "getPolicyStatistics"
      produces:
      - "application/json"
      parameters:
      - name: "dpid"
        in: "path"
        description: "Policy Name"
        required: true
        type: "string"
      - name: "policy_name"
        in: "path"
        description: "Policy Name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/PolicyStatisticsList"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []

  #### Disable / Enable Statistics ####
  /tapping/{dpid}/stat/nonrealtime/{state}/policy/all:
    get: #1.3
      tags:
      - "statistics"
      summary: "Enable NPB Statistics of All Policy"
      description: "Enable NPB Statistics of All Policy"
      operationId: "getEnableAllPolicyStatistics"
      produces:
      - "application/json"
      parameters:
      - name: "dpid"
        in: "path"
        required: true
        type: "string"
        description: "dpid name"
      - name: "state"
        in: "path"
        required: true
        type: "string"
        description: "state"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/EnablePolicyStatistics"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/{dpid}/stat/nonrealtime/{state}/policy/{policy_name}:
    get: #1.4
      tags:
      - "statistics"
      summary: "Enable NPB Statistics of Policy"
      description: "Enalbe NPB Statistics of Policy"
      operationId: "getEnablePolicyStatistics"
      produces:
      - "application/json"
      parameters:
      - name: "dpid"
        in: "path"
        description: "dpid Name"
        required: true
        type: "string"
      - name: "state"
        in: "path"
        description: "state Name"
        required: true
        type: "string"
      - name: "policy_name"
        in: "path"
        description: "Policy Name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/EnablePolicyStatistics"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []

/tapping/{dpid}/stat/nonrealtime/{time}/policy/{policy_name}:
    get: #1.3
      tags:
      - "statistics"
      summary: "Get NPB Non realtime Statistics of Policy"
      description: "Get NPB Non realtime Statistics of Policy"
      operationId: "getPolicyStatisticsNonreal"
      produces:
      - "application/json"
      parameters:
      - name: "dpid"
        in: "path"
        required: true
        type: "string"
        description: "dpid name"
      - name: "time"
        in: "path"
        required: true
        type: "string"
        description: "time"
      - name: "policy_name"
        in: "path"
        required: true
        type: "string"
        description: "policy name"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/PolicyStatisticsNonrealRespList"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/{dpid}/stat/nonrealtime/{start_time}/{end_time}/policy/{policy_name}:
    get: #1.3
      tags:
      - "statistics"
      summary: "Get NPB Non realtime Statistics of Policy"
      description: "Get NPB Non realtime Statistics of Policy"
      operationId: "getPolicyStatisticsNonreal"
      produces:
      - "application/json"
      parameters:
      - name: "dpid"
        in: "path"
        required: true
        type: "string"
        description: "dpid name"
      - name: "start_time"
        in: "path"
        required: true
        type: "string"
        description: "start_time"
      - name: "end_time"
        in: "path"
        required: true
        type: "string"
        description: "end_time"
      - name: "policy_name"
        in: "path"
        required: true
        type: "string"
        description: "policy name"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/PolicyStatisticsDurationRespList"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []
  
  /tapping/{dpid}/stat/port/all:
    get: #1.3
      tags:
      - "statistics"
      summary: "Get NPB Statistics of All Port"
      description: "Get NPB Statistics of All Port"
      operationId: "getALLPortStatistics"
      produces:
      - "application/json"
      parameters:
      - name: "dpid"
        in: "path"
        required: true
        type: "string"
        description: "dpid name"      
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ALLPortStatisticsRespList"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []

  /tapping/{dpid}/stat/port/{port_num}:
    get: #1.3
      tags:
      - "statistics"
      summary: "Get NPB Statistics of Port"
      description: "Get NPB Statistics of Port"
      operationId: "getPortStatistics"
      produces:
      - "application/json"
      parameters:
      - name: "dpid"
        in: "path"
        required: true
        type: "string"
        description: "dpid name"      
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/PortStatisticsRespList"
        404:
          description: "API not found"
          schema:
            $ref: "#/definitions/ErrorMessage"
      security: []

#########################################
# Definitions
#########################################
definitions:
  # [Res] Success
  SuccessMessage:
    type: "object"
    properties:
      message:
        type: "string"
  # [Res] Used in Error response body
  ErrorMessage:
    type: "object"
    properties:
      error:
        type: "string"

  PortGroupName:
    type: "object"
    properties:
      group_name:
        type: "string"

  DpidinfoObject:
    type: "object"
    propeties:
      dpid:
        type: "string"
      ports:
        type: "array"
        items:
          type: "string"

  DpidinfoObject2:
    type: "object"
    propeties:
      dpid:
        type: "string"
      ports:
        type: "array"
        items:
          type: "string"
      group_id:
        type: "string"

  PortgroupObject:
    type: "object"
    properties:
      group_name:
        type: "string"
      dpid_info:
        items:
          $ref: "#/definitions/DpidinfoObject"
      type:
        type: "sring"

  GetDpidinfoObject:
    type: "object"
    propeties:
      dpid_info:
        items:
          $ref: "#/definitions/DpidinfoObject2"
      type:
        type: "string"
      group_name:
        type: "string"      
  
  GetGroupsObject:
    type: "object"
    propeties:
      groups:
        items:
          $ref: "#/definitions/GetDpidinfoObject"
      type:
        type: "string"        
      group_name:
        type: "string"
  
  GetGroupObject:
    type: "object"
    propeties:
      group:
        $ref: "#/definitions/GetDpidinfoObject"    

  RateLimitObject:
    type: "object"
    properties:
      limit_name:
        type: "string"
      type:
        type: "string" 
      rate:
        type: "string"
      burst_size:
        type: "string"
  
  RateLimitMerterId:
    type: "object"
    properties:
      mid:
        type: "string"
      dpid:
        type: "string"

  RateLimitRespObject:
    type: "object"
    properties:
      limit_name:
        type: "string"
      type:
        type: "string" 
      rate:
        type: "string"
      burst_size:
        type: "string"
      meter_id:
        items:
          $ref: "#/definitions/RateLimitMerterId"

  RateLimitRespList:
    type: "object"
    properties:
      rate_limits:
        items:
          $ref: "#/definitions/RateLimitRespObject"     

  RateLimitResp:
    type: "object"
    properties:
      rate_limit:
        $ref: "#/definitions/RateLimitRespObject" 

  RateLimitName:
    type: "object"
    properties:
      limit_name:
        type: "string"   
  
  MatchObject:
    type: "object"
    properties:
      match:
        type: "string"
      value:
        type: "string"
  
  FilterInnerObject:
    type: "object"
    properties:
      filter_name:
        type: "string"
      match_value:
        items:
          $ref: "#/definitions/MatchObject"

  FilterObject:
    type: "object"
    properties:
      filter:
        $ref: "#/definitions/FilterInnerObject"

  FilterName:
    type: "object"
    properties:
      filter_name:
        type: "string"

  FilterRespList:
    type: "object"
    properties:
      filters:
        items:
          $ref: "#/definitions/FilterObject"
  
  FilterResp:
    type: "object"
    properties:
      filter:
        $ref: "#/definitions/FilterObject"
  
  PolicyActionObject:
    type: "object"
    properties:
      action:
        type: "string"
      value:
        type: "string"
      
  PolicyObject:
    type: "object"
    properties:
      in_port:
        type: "string"
      eg_port:
        type: "string"
      filter:
        type: "array"
        items:
          type: "string"
      rate_limit:
        type: "string"
      policy_action:
        items:
          $ref: "PolicyActionObject"
      policy_name:
        type: "string"      

  PolicyName:
    type: "object"
    properties:
      filter_name:
        type: "string"

  PolicyRespList:
    type: "object"
    properties:
      policies:
        items:
          $ref: "#/definitions/PolicyObject"
  
  PolicyResp:
    type: "object"
    properties:
      policy:
        $ref: "#/definitions/PolicyObject"

  PolicyStatisticsObject:
    type: "object"
    properties:
      filter_name:
        type: "string"
      pps:
        type: "string"
      byte_count:
        type: "string"        
      bps:
        type: "string"
      pkt_count:
        type: "string"
      aliave:
        type: "string"           

  PolicyStatisticsList:
    type: "object"
    properties:
      policy_name:
        type: "string"
      policy_stats:
        items:
          $ref:"#/definitions/PolicyStatisticsObject"

  ALLPolicyStatisticsRespList:
    type: "object"
    properties:
      policies_stats:
        items:
          $ref: "#/definitions/PolicyStatisticsList"

  EnablePolicyStatistics:
    type: "object"
    properties:
      nonrealtime:
        type: "string"
  
  PolicyStatisticsNonrealList:
    type: "object"
    properties:
      filter_name:
        type: "string"
      time: 
        type: "string"
      pps:
        type: "string"
      byte_count:
        type: "string"
      bps:
        type: "string"
      pkt_count:
        type: "string"
      alive:
        type: "string"

  PolicyStatisticsNonrealRespList:
    type: "object"
    properties:
      time:
        type: "string"
      policy_name:
        type: "string"
      policy_stats:
        items:
          $ref: "#/definitions/PolicyStatisticsNonrealList"
  
  StatisticsObject:
    type: "object"
    properties:
      pps:
        type: "string"
      byte_count:
        type: "string"
      bps:
        type: "string"
      pkt_count:
        type: "string"
      alive:
        type: "string"
  
  FilterStatsObject:
    type: "object"
    properties:
      filter_name:
        type: "string"
      stats:  
        items:
          $ref: "/definitions/StatisticsObject"

  FilterStatsList:
    type: "object"
    properties:
      filter_stats:
        itmes:
          $ref: "#/definitions/FilterStatsObject"

  PolicyStatisticsDurationRespList:
    type: "object"
    properties:
      policy_name:
        type: "string"
      start_time:
        type: "string"
      end_time:
        type: "string"
      policy_stats:
        $ref: "#/definitions/FilterStatsList"
  
  PortStatistics:
    type: "object"
    properties:
      tx_dropped:
        type:  "string"
      rx_packets:
        type:  "string"
      rx_crc_err:
        type:  "string"
      tx_bytes:
        type:  "string"
      rx_dropped:
        type:  "string"
      port_no:
        type:  "string"
      rx_over_err:
        type:  "string"
      rx_frame_err:
        type:  "string"
      rx_bytes:
        type:  "string"
      tx_errors:
        type:  "string"
      duration_nsec:
        type:  "string"
      collisions:
        type:  "string"
      duration_sec:
        type:  "string"
      rx_errors:
        type:  "string"
      tx_packets:
        type:  "string"

  ALLPortStatisticsRespList:
    type: "object"
    properties:
      port_stats:
        items:
          $ref: "#/definitions/PortStatistics"

  PortStatisticsRespList:
    type: "object"
    properties:
      port_stat:
        $ref: "#/definitions/PortStatistics"  

